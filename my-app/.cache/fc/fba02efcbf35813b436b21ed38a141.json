{"id":"../node_modules/lodash/_baseRest.js","dependencies":[{"name":"E:\\FH Projekte\\WT\\fh-wt2\\my-app\\package.json","includedInParent":true,"mtime":1557610646498},{"name":"E:\\FH Projekte\\WT\\fh-wt2\\my-app\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1549197174769},{"name":"./identity","loc":{"line":1,"column":23},"parent":"E:\\FH Projekte\\WT\\fh-wt2\\my-app\\node_modules\\lodash\\_baseRest.js","resolved":"E:\\FH Projekte\\WT\\fh-wt2\\my-app\\node_modules\\lodash\\identity.js"},{"name":"./_overRest","loc":{"line":2,"column":23},"parent":"E:\\FH Projekte\\WT\\fh-wt2\\my-app\\node_modules\\lodash\\_baseRest.js","resolved":"E:\\FH Projekte\\WT\\fh-wt2\\my-app\\node_modules\\lodash\\_overRest.js"},{"name":"./_setToString","loc":{"line":3,"column":26},"parent":"E:\\FH Projekte\\WT\\fh-wt2\\my-app\\node_modules\\lodash\\_baseRest.js","resolved":"E:\\FH Projekte\\WT\\fh-wt2\\my-app\\node_modules\\lodash\\_setToString.js"}],"generated":{"js":"var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/lodash/_baseRest.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/lodash/_baseRest.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"../node_modules/lodash/_baseRest.js":"var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n"},"lineCount":18}},"error":null,"hash":"588b7affb33482540622c5917849d8d5","cacheData":{"env":{}}}